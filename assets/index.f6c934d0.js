var e=Object.defineProperty,t=(t,i,s)=>(((t,i,s)=>{i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s})(t,"symbol"!=typeof i?i+"":i,s),s);import{p as i}from"./phaser.07756143.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const i of e)if("childList"===i.type)for(const e of i.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class s extends i.exports.Scene{constructor(){super("Boot")}preload(){this.load.setPath("./assets"),this.load.image("sky","sky.png")}create(){this.scene.start("Preload")}}const a=e=>{var t;if(!e)throw new Error("Key not specified");try{const t=localStorage.getItem(e);return null!==t?t:void 0}catch(i){console.error(`Error getting ${e} from local storage. Error: ${null==(t=i||"")?void 0:t.toString()}`,{key:e},i)}},r=a,n=(e,t)=>{if(!e)throw new Error("Key not specified");try{localStorage.setItem(e,t.toString())}catch(i){console.error("Failed to set local storage",{key:e,value:t},i)}};class h{constructor(e){t(this,"imagePath"),t(this,"name"),t(this,"flyData"),this.imagePath=e.imagePath,this.name=e.name,this.flyData=e.flyData}preload(e){this.preloadData(e,this.flyData)}buildForFly(e,t,i,s){const a=("default"===t?e.add:e.physics.add).sprite(i.x,i.y,this.name).setName("f_"+this.name),{scale:r,bodyHeightFn:n,flipX:h}=this.flyData;r&&a.setScale(r*s),h&&a.setFlipX(!0),n&&a instanceof Phaser.Physics.Arcade.Sprite&&a.setBodySize(a.width,n(a.height),!0);const o=`${this.name}_fly`,c=e.anims.exists(o);return"sprite"===this.flyData.type&&(c||e.anims.create({key:o,frames:e.anims.generateFrameNumbers(this.name,{start:this.flyData.startFrame,end:this.flyData.endFrame}),frameRate:this.flyData.frameRate,repeat:this.flyData.repeat}),a.play(o)),"spriteJson"===this.flyData.type&&(c||e.anims.create({key:o,frames:this.flyData.frameNames.map((e=>({key:this.name,frame:e}))),frameRate:this.flyData.frameRate,repeat:this.flyData.repeat}),a.play(o)),a}preloadData(e,t){switch(t.type){case"image":e.image(this.name,this.imagePath);break;case"sprite":e.spritesheet(this.name,this.imagePath,{frameWidth:t.frameWidth,frameHeight:t.frameHeight});break;case"spriteJson":e.atlas(this.name,this.imagePath,t.jsonPath)}}}const o=new h({imagePath:"birdSprite.png",name:"Bird",flyData:{type:"sprite",flipX:!0,scale:3,bodyHeightFn:e=>e-8,frameWidth:16,frameHeight:16,startFrame:9,endFrame:15,frameRate:8,repeat:-1}}),c=new h({imagePath:"griff.png",name:"Griffin",flyData:{type:"image",scale:.1,bodyHeightFn:e=>e-30}}),l=[o,new h({imagePath:"louisSprite.png",name:"Louis",flyData:{type:"spriteJson",jsonPath:"louisSprite.json",frameNames:["fly_001.png","fly_002.png","fly_003.png","fly_004.png","fly_005.png"],scale:.2,bodyHeightFn:e=>e-55,bodyWidthFn:e=>e-70,frameRate:10,repeat:-1}}),c].reduce(((e,t)=>({...e,[t.name]:t})),{}),p={width:800,height:600},d={width:540,height:960},m=()=>window.innerWidth<window.innerHeight,u="bestScore",g="character";class y extends i.exports.Scene{constructor(e,i){super(e),t(this,"sceneOptions"),t(this,"bestScore"),t(this,"character"),t(this,"background"),t(this,"characters",l),t(this,"menuItemFw",600),t(this,"menuItemColor","#FFFFFF"),t(this,"menuItemHighlightColor","#FFFF00"),t(this,"backButton"),this.sceneOptions=i||{}}get internalScale(){return this.isMobileSize?1.5:1}get gameHeight(){return this.scale.height}get gameWidth(){return this.scale.width}get gameCenter(){return{x:this.gameWidth/2,y:this.gameHeight/2}}get isMobileSize(){return this.gameWidth===d.width&&this.gameHeight===d.height}get menuItemFz(){return 32*this.internalScale}get menuItemLh(){return 50*this.internalScale}get menuItemGap(){return 10*this.internalScale}create(){var e;const t=r(g);this.character=null!=(e=this.characters[t])?e:this.characters.Bird,this.bestScore=((e,t=0)=>{var i;const s=a(e);if(!s)return t;try{const e=parseInt(s);return isNaN(e)?t:e}catch(r){console.error(`Error parsing ${s} from key ${e} to int from local storage. Error: ${null==(i=r||"")?void 0:i.toString()}`,{stringValue:s,key:e},r)}return t})(u),this.background=this.add.sprite(0,0,"sky").setOrigin(0,0).setScale(this.gameWidth/800,this.gameHeight/600),this.sceneOptions.withBack&&(this.backButton=this.add.image(this.gameWidth-10*this.internalScale,this.gameHeight-10*this.internalScale,"back").setOrigin(1).setScale(1.5*this.internalScale).setInteractive({cursor:"pointer"}).on("pointerdown",(()=>this.scene.start("Menu")),this))}initMenu(e){let t=0;e.forEach((e=>{const i=this.add.text(this.gameCenter.x,this.gameCenter.y+t,e.label,{font:`${this.menuItemFw} ${this.menuItemFz}px Arial`,color:this.menuItemColor}).setAlign("center").setOrigin(.5,1).setInteractive({cursor:"pointer"}).on("pointerover",(()=>{i.setColor(this.menuItemHighlightColor)}),this).on("pointerout",(()=>i.setColor(this.menuItemColor)),this).on("pointerup",(()=>{switch(e.action.type){case"continueScene":this.scene.stop(),this.scene.resume(e.action.scene);break;case"startScene":this.scene.start(e.action.scene);break;case"startStopScene":this.scene.stop(e.action.stopScene),this.scene.start(e.action.startScene)}}),this);t+=this.menuItemLh}),this)}setBestScore(e){this.bestScore=e,n(u,e)}setCharacter(e){this.character=this.characters[e],n(g,e)}}const S=16777215,f={easy:{pipeGapRange:{min:150,max:200},pipeSpacingRange:{min:300,max:350}},normal:{pipeGapRange:{min:130,max:180},pipeSpacingRange:{min:280,max:330}},hard:{pipeGapRange:{min:115,max:145},pipeSpacingRange:{min:250,max:310}}},b=m()?d:p,w={type:Phaser.AUTO,width:b.width,height:b.height,parent:"game-container",backgroundColor:"#000000",pixelArt:!0,physics:{default:"arcade",arcade:{debug:!1}},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[s,class extends y{constructor(){super("Preload"),t(this,"progressBar"),t(this,"progressBox"),t(this,"loadingText")}preload(){this.load.on("complete",(()=>{setTimeout((()=>{this.scene.start("Menu")}),1e3)}),this),this.load.setPath("./assets"),Object.keys(this.characters).forEach((e=>{this.characters[e].preload(this.load)}),this),this.load.image("pipe","pipe.png"),this.load.image("pause","pause.png"),this.load.image("back","back.png")}create(){super.create(),this.initLoader()}initLoader(){const{width:e,height:t}=this.scale,i=.5*e,s=.5*t,a=32.5*this.internalScale,r=75*this.internalScale,n=this.add.rectangle(i-a-10*this.internalScale,s,a,r,S,1),h=this.add.rectangle(i,s,a,r,S,1),o=this.add.rectangle(i+a+10*this.internalScale,s,a,r,S,1),c={scaleY:1.75,duration:150,repeat:-1,repeatDelay:450,yoyo:!0,ease:Phaser.Math.Easing.Linear};this.add.tween({...c,targets:n}),this.add.tween({...c,targets:h,delay:150}),this.add.tween({...c,targets:o,delay:450})}},class extends y{constructor(){super("Menu"),t(this,"menu")}create(){super.create(),this.menu=[{action:{type:"startScene",scene:"Gameplay"},label:"Play"},{action:{type:"startScene",scene:"CharacterSelect"},label:"Character"},{action:{type:"startScene",scene:"Score"},label:"Score"}],this.initMenu(this.menu)}},class extends y{constructor(){super("CharacterSelect",{withBack:!0}),t(this,"menu")}create(){super.create();const{width:e,height:t}=this.scale,i=.5*e,s=.5*t,a=[];Object.keys(this.characters).forEach(((e,t)=>{const r=this.characters[e],n=2*r.flyData.scale,h=r.buildForFly(this,"default",{x:i+200*(t-1),y:s},this.internalScale).setScale(1.5*r.flyData.scale*this.internalScale).setInteractive({cursor:"pointer"});h.on("pointerover",(()=>{this.add.tween({targets:h,scale:1.2*n,duration:150,ease:Phaser.Math.Easing.Linear})}),this).on("pointerout",(()=>{this.add.tween({targets:h,scale:n,duration:150,ease:Phaser.Math.Easing.Linear})}),this),h.on("pointerdown",(()=>{a.filter((e=>e.name!==h.name)).forEach((e=>{e.destroy(!0)}),this),h.input.enabled=!1,this.add.tween({targets:h,x:i,y:s,scale:20*n,duration:1500,ease:Phaser.Math.Easing.Linear}),this.setCharacter(e),setTimeout((()=>{this.scene.start("Menu")}),1500)}),this),a.push(h)}),this)}},class extends y{constructor(){super("Score",{withBack:!0}),t(this,"menu")}create(){super.create(),this.add.text(this.gameCenter.x,this.gameCenter.y,`Best Score: ${this.bestScore}`,{font:`600 ${32*this.internalScale}px Arial`,color:"#fff"}).setOrigin(.5,1)}},class extends y{constructor(){super("Gameplay"),t(this,"bird"),t(this,"pipes"),t(this,"score"),t(this,"scoreText"),t(this,"bestScoreText"),t(this,"isPaused"),t(this,"pauseButton"),t(this,"resumeEvent"),t(this,"birdStartPosition"),t(this,"countDownTime"),t(this,"countDownText"),t(this,"countDownEvent"),t(this,"pipeCheckElapsedTime")}create(){super.create(),this.birdStartPosition={x:.1*this.gameWidth,y:this.gameHeight/2},this.initBird(),this.initPipes(),this.initColliders(),this.initPause(),this.initScore(),this.input.on("pointerdown",this.flap,this),this.input.keyboard.on("keydown-SPACE",this.flap,this),this.input.keyboard.on("keydown-ESC",this.pauseGame,this)}initPause(){this.pauseButton=this.add.image(this.gameWidth-10*this.internalScale,this.gameHeight-10*this.internalScale,"pause").setOrigin(1).setScale(2*this.internalScale).setInteractive({cursor:"pointer"}).on("pointerdown",(e=>{e.event.stopPropagation(),this.pauseGame()}),this),this.resumeEvent||(this.resumeEvent=this.events.on("resume",(()=>{this.startCountDown()}),this))}initBird(){this.bird=this.character.buildForFly(this,"physics",this.birdStartPosition,this.internalScale).setOrigin(0),this.bird.body.gravity.y=600*this.internalScale,this.bird.setCollideWorldBounds(!0,void 0,.2,!0),this.physics.world.on("worldbounds",((e,t,i)=>{e.gameObject===this.bird&&i&&this.bird.setVelocityY(-87.5)}),this)}initPipes(){this.pipes=this.physics.add.group();for(let e=0;e<4;e++){const e=this.buildPipe(),t=this.buildPipe();this.placePipe(e,t)}this.pipes.setVelocityX(this.internalScale/2*-200)}initScore(){this.score=0,this.scoreText=this.add.text(16*this.internalScale,16*this.internalScale,"Score: 0",{font:`700 ${32*this.internalScale}px Arial`,color:"#000"}),this.bestScoreText=this.add.text(16*this.internalScale,52*this.internalScale,`Best score: ${this.bestScore}`,{font:`500 ${18*this.internalScale}px Arial`,color:"#000"})}initColliders(){this.physics.add.collider(this.bird,this.pipes,this.gameOver,void 0,this)}update(e,t){const i=this.bird.y<=-this.bird.height,s=this.bird.y>=this.gameHeight;(i||s)&&this.gameOver(),this.tryRecyclePipes(t)}startCountDown(){this.countDownTime=3,this.countDownText=this.add.text(this.gameCenter.x,this.gameCenter.y,"Fly in "+this.countDownTime,{font:"700 32px Arial",color:"#FFF"}).setOrigin(.5),this.countDownEvent=this.time.addEvent({delay:1e3,callback:()=>{--this.countDownTime,this.countDownText.setText("Fly in "+this.countDownTime),this.countDownTime<=0&&(this.countDownText.setText(""),this.countDownEvent.remove(),this.countDownEvent=void 0,this.physics.resume(),this.isPaused=!1)},callbackScope:this,repeat:this.countDownTime})}flap(){this.isPaused||(this.bird.body.velocity.y=-175*this.internalScale)}placePipe(e,t){let s=this.getLastPipeX();const{pipeSpacingRange:a,pipeGapRange:r}=f[this.resolveDifficulty()];0===s?s=400:s+=i.exports.Math.Between(a.min*this.internalScale*1.1,a.max*this.internalScale*1.1);const n=i.exports.Math.Between(r.min*this.internalScale*1.1,r.max*this.internalScale*1.1),h=this.gameHeight-n-75*this.internalScale,o=75*this.internalScale;e.setX(s),e.setY(i.exports.Math.Between(o,h)),e.setOrigin(0,1),e.setFlipY(!0),t.setX(s),t.setY(e.y+n),t.setOrigin(0,0)}buildPipe(){return this.pipes.create(0,0,"pipe").setImmovable(!0).setScale(1.25*this.internalScale*.22).setOrigin(0,0)}getLastPipeX(){let e=0;return this.pipes.getChildren().forEach((t=>{e=Math.max(e,t.x)}),this),e}gameOver(){this.physics.pause(),this.bird.setTint(16711680),this.time.addEvent({delay:1e3,callback:()=>{this.scene.restart()},loop:!1})}tryRecyclePipes(e){if(this.pipeCheckElapsedTime+=e,this.pipeCheckElapsedTime<10)return;this.pipeCheckElapsedTime=0;const t=[];this.pipes.getChildren().forEach((e=>{e.getBounds().right<0&&t.push(e)})),2===t.length&&(this.placePipe(t[0],t[1]),this.incrementScore())}checkCollision(){const e=this.bird.y<-this.bird.height,t=this.bird.y>this.gameHeight;(e||t)&&this.gameOver()}incrementScore(){this.score++,this.scoreText.setText(`Score: ${this.score}`),this.bestScore<this.score&&(this.setBestScore(this.score),this.bestScoreText.setText(`Best score: ${this.bestScore}`)),this.score}resolveDifficulty(){return this.score>3?"hard":this.score>1?"normal":"easy"}pauseGame(){this.physics.pause(),this.scene.pause(),this.scene.launch("Pause")}},class extends y{constructor(){super("Pause"),t(this,"menu")}create(){super.create(),this.menu=[{action:{type:"continueScene",scene:"Gameplay"},label:"Continue"},{action:{type:"startStopScene",stopScene:"Gameplay",startScene:"Menu"},label:"Exit"}],this.initMenu(this.menu)}}]},x=new i.exports.Game(w);window.addEventListener("resize",(()=>{let e;const t=x.canvas.width===d.width&&x.canvas.height===d.height;m()?t||(e=d):t&&(e=p),e&&(x.scale.setGameSize(e.width,e.height),x.scene.getScenes(!0).forEach((e=>{e.scene.stop()})),setTimeout((()=>{x.scene.start("Menu")}),50))}));
